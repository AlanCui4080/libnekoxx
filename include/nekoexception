/*
 *	libnekoxx
 *	By MIT License.
 *	Copyright (c) 2023 Ziyao.
 */

/*
 *	This is a non-standard implementation of exception using
 *	setjmp()/longjmp()
 */

#ifndef __NEKOXX_NEKOEXCEPTION_INC__
#define __NEKOXX_NEKONEXCEPTION_INC__

#include <stdlib.h>
#include <setjmp.h>

#include <exception>

extern jmp_buf __nekoTryEnv;
extern int __nekoTryTop;
extern std::exception __nekoExceptionObj;

#define __nthrow(obj)                       \
	do {                                \
		__nekoExceptionObj = (obj); \
		if (!__nekoTryTop)          \
			abort();            \
		longjmp(__nekoTryEnv, 1);   \
	} while (0)

#define __ntry                                                \
	{                                                     \
		jmp_buf __buf;                                \
		memcpy(__buf, __nekoTryEnv, sizeof(jmp_buf)); \
		__nekoTryTop++;                               \
		if (!setjmp(__nekoTryEnv)) {
#define __nscatch(t, n)                                 \
	}                                               \
	else                                            \
	{                                               \
		if (&__nekoExceptionObj.id == &t::id) { \
			t n = __nekoExceptionObj;
#define __ncatch(t, n)                              \
	}                                           \
	else if (&__nekoExceptionObj::id == &t::id) \
	{                                           \
		t n = __nekoExceptionObj;
#define __necatch                                 \
	}                                         \
	else                                      \
	{                                         \
		if (__nekoTryTop) {               \
			__nekoTryTop--;           \
			longjmp(__nekoTryEnv, 1); \
		} else                            \
			abort();                  \
	}                                         \
	}                                         \
	__nekoTryTop--;                           \
	}

#endif // __NEKOXX_NEKOEXCEPTION_INC__
